# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

snippet cout
std::cout << "${1:text}";
endsnippet

snippet coutn
std::cout << "${1:text}\n";
endsnippet

snippet cin
std::cin >> ${1:variable};
endsnippet

snippet function
${1:void} ${2:function_name}(${3:params}) {

	$0

}
endsnippet

snippet main
int main(${1:void}) {

	$0

}
endsnippet

snippet ifndef
#ifndef __${1:header_name}_H__
#define __${1:header_name}_H__

$0

#endif // __${1:header_name}_H__
endsnippet

snippet class
class ${1:classname}_t {
	private:
	$0
	public:
};
endsnippet

snippet struct
struct ${1:structname}_t {
	$0
};
endsnippet
